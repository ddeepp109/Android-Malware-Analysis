import os
import wget
#Check the report Path
def obfuscation(ApkFileName):
    passing_value={
                    "Rename":"-o ClassRename -o FieldRename -o MethodRename",
                    "Encryption":"-o AssetEncryption -o ConstStringEncryption -o LibEncryption -o ResStringEncryption",
                    "Code":"-o AdvancedReflection -o ArithmeticBranch -o CallIndirection -o DebugRemoval -o Goto -o MethodOverload -o Nop -o Reflection -o Reorder",
                    "Low":"-o RandomManifest -o ClassRename -o AssetEncryption -o AdvancedReflection -o MethodOverload -o Goto -o Rebuild -o NewSignature -o NewAlignment",
                    "Medium":"-o RandomManifest -o ClassRename -o FieldRename -o ConstStringEncryption -o ResStringEncryption -o AssetEncryption -o AdvancedReflection -o MethodOverload -o ArithmeticBranch -o CallIndirection -o Rebuild -o NewSignature -o NewAlignment",
                    "High":"-o RandomManifest -o ClassRename -o FieldRename -o MethodRename -o ConstStringEncryption -o ResStringEncryption -o AssetEncryption -o AssetEncryption -o AdvancedReflection -o MethodOverload -o ArithmeticBranch -o CallIndirection -o DebugRemoval -o Rebuild -o NewSignature -o NewAlignment"
                    }
    for key, value in passing_value.items() :
        obfuscat = "docker run --rm -it obfuscapk -p -w /tmp/ -o RandomManifest -o Rebuild -o NewSignature -o NewAlignment " + value + " -d /home/ubuntu/RM/obfuscatedAPK/" + key + "/ obfuscated_" + ApkFileName + " " + ApkFileName
        #obfuscat = "python3 -m obfuscapk.cli -p -w /tmp/ -o RandomManifest -o Rebuild -d OutputAPK/" + ApkFileName +" "+ ApkFileName
        os.system(obfuscat)
        static_analysis(ApkFileName,1,key)
        dynamic_analysis(ApkFileName,1,key)

def static_analysis(ApkFileName,n,key="Normal"):
    if n == 0:
        ApkFilePath = "/home/ubuntu/RM/APKs/" + ApkFileName
        ReportFilePath = "/home/ubuntu/RM/Reports/Static/APK_Report/" + ApkFileName +".json"
        command="quark -a "+ApkFileName+" -s -c -o "+ ReportFilePath
    else:
        ApkFilePath = "/home/ubuntu/RM/obfuscatedAPK/"+ key +"/ obfuscated_" + ApkFileName
        ReportFilePath = "/home/ubuntu/RM/Reports/Static/Obfuscapk_Report/" + ApkFileName + ".json"
        command="quark -a " + ApkFilePath + " -s -c -o " + ReportFilePath
    os.system(command)
    print("Static Analysis" + ApkFileName)

def dynamic_analysis(ApkFileName,n,key="Normal"):
    if n == 0:
        command="python /home/ubuntu/RM/cuckoo/utils/submit.py /home/ubuntu/RM/APKs/"+ApkFileName
    else:
        command="python /home/ubuntu/RM/cuckoo/utils/submit.py /home/ubuntu/RM/obfuscatedAPK/"+ key +"/ obfuscated_"+ApkFileName
    os.system("python /home/ubuntu/RM/cuckoo/cuckoo.py --clean")
    os.system(command)
    os.system("python /home/ubuntu/RM/cuckoo/cuckoo.py")

def last_processed_APK():
    file = open("count.txt", "r")
    count = file.readline()
    print (count)
    count = int(count)
    file.close()
    return count-1

def processed_APK(Number):
    file = open("count.txt", "w")
    file.write(str(Number))
    file.close()

if __name__ == '__main__':
    try:
        print("Downloading APK File....")
        count = last_processed_APK()
        file = open("sha256.txt", "r")
        lines = file.readlines()
        print(len(lines))
        LinesInFile = len(lines)
        print (count)
        print (LinesInFile)
        for i in range(count,LinesInFile):
            download1="https://androzoo.uni.lu/api/download?apikey=1fad2754d5ed9728b4f94ea343008c3427830f11a6e55baaa0b951642c44c6bb&sha256="+lines[i]
            ApkFileName=wget.download(download1)
            print(ApkFileName)
            static_analysis(ApkFileName,0)
            dynamic_analysis(ApkFileName,0)
            print("Static Analysis is Done(Without obfuscation)")
            obfuscation(ApkFileName)
            print("Static Analysis is Done(With obfuscation)")
            print("Back to main")
            processed_APK(i)
        file.close()
    except KeyboardInterrupt:
        print('Hello user you have pressed ctrl-c button.')
        processed_APK(i)
        print("Thank You")







#n is defining the APK file Type 0 for the normal while else are for obfuscated




"""
def static_analysis(ApkFileName,n):
    command="quark -a "+ApkFileName+" -s -c -o /home/ubuntu/RM/Reports/"+ApkFileName+"_output.json"
    os.system(command)
    print("Static Analysis"+ApkFileName)

def dynamic_analysis(ApkFileName):
    command="python /home/ubuntu/RM/cuckoo/utils/submit.py "+ApkFileName
    os.system("python /home/ubuntu/RM/cuckoo/cuckoo.py --clean")
    os.system(command)
    os.system("python /home/ubuntu/RM/cuckoo/cuckoo.py")

def obfuscation(ApkFileName):
    obfuscat = "docker run --rm -it obfuscapk -p -w /tmp/ -o RandomManifest -o Rebuild -d /home/ubuntu/RM/obfuscatedAPK/" + ApkFileName +" "+ ApkFileName
    os.system(obfuscat)
    dir="/home/ubuntu/RM/obfuscatedAPK/"+key
    os.chdir(dir)
    static_analysis(ApkFileName,1)
    dynamic_analysis(ApkFileName,1)
"""