#importing required packages
import os
import wget

#obfuscation function
def obfuscation(ApkFileName):
    passing_value={
                    "Rename":"-o ClassRename -o FieldRename -o MethodRename",
                    "Encryption":"-o AssetEncryption -o ConstStringEncryption -o LibEncryption -o ResStringEncryption",
                    "Code":"-o AdvancedReflection -o ArithmeticBranch -o CallIndirection -o DebugRemoval -o Goto -o MethodOverload -o Nop -o Reflection -o Reorder",
                    "Low":"-o RandomManifest -o ClassRename -o AssetEncryption -o AdvancedReflection -o MethodOverload -o Goto -o Rebuild -o NewSignature -o NewAlignment",
                    "Medium":"-o RandomManifest -o ClassRename -o FieldRename -o ConstStringEncryption -o ResStringEncryption -o AssetEncryption -o AdvancedReflection -o MethodOverload -o ArithmeticBranch -o CallIndirection -o Rebuild -o NewSignature -o NewAlignment",
                    "High":"-o RandomManifest -o ClassRename -o FieldRename -o MethodRename -o ConstStringEncryption -o ResStringEncryption -o AssetEncryption -o AssetEncryption -o AdvancedReflection -o MethodOverload -o ArithmeticBranch -o CallIndirection -o DebugRemoval -o Rebuild -o NewSignature -o NewAlignment"
                    } # commands as a value to perform 6 obfuscation and key is the type of the bfuscation
    for key, value in passing_value.items() :
        obfuscat = "sh ./obfuscat.sh " + "'"+ value + "'" + " " + key + " " + ApkFileName
        os.system(obfuscat)
        static_analysis(ApkFileName,1,key) #calling static analysis function with 2nd argument "1" which define the apkfile is obfuscated
        dynamic_analysis(ApkFileName,1,key) #calling Dynamic analysis function with 2nd argument "1" which define the apkfile is obfuscated
        
def static_analysis(ApkFileName,n,key="Normal"):
    if n == 0: # value zero for non-obfuscated function
        ApkFilePath = "/home/ubuntu/Android-Malware-Analysis/APKs/" + ApkFileName
        ReportFilePath = "/home/ubuntu/Android-Malware-Analysis/Reports/Static/APK_Report/" + ApkFileName +".json"
        command="quark -a "+ApkFileName+" -s -c -o "+ ReportFilePath
    else:
        ApkFilePath = "/home/ubuntu/Android-Malware-Analysis/obfuscatedAPK/"+ key +"/" + ApkFileName
        ReportFilePath = "/home/ubuntu/Android-Malware-Analysis/Reports/Static/Obfuscapk_Report/"+ key + ApkFileName + ".json"
        command="quark -a " + ApkFilePath + " -s -c -o " + ReportFilePath
    os.system(command)
    print("Static Analysis" + ApkFileName)

def dynamic_analysis(ApkFileName,n,key="Normal"):
    if n == 0: # value zero for non-obfuscated function
        command="python /home/ubuntu/Android-Malware-Analysis/cuckoo/utils/submit.py /home/ubuntu/Android-Malware-Analysis/APKs/"+ApkFileName
    else:
        command="python /home/ubuntu/Android-Malware-Analysis/cuckoo/utils/submit.py /home/ubuntu/Android-Malware-Analysis/obfuscatedAPK/"+ key +"/ obfuscated_"+ApkFileName
    os.system("python /home/ubuntu/Android-Malware-Analysis/cuckoo/cuckoo.py --clean")
    os.system(command)
    os.system("python /home/ubuntu/Android-Malware-Analysis/cuckoo/cuckoo.py")

#Read the count file to know last processed function
def last_processed_APK():
    file = open("count.txt", "r")
    count = file.readline()
    print (count)
    count = int(count)
    file.close()
    return count-1

#Log the last processed APK 
def processed_APK(Number):
    file = open("count.txt", "w")
    file.write(str(Number))
    file.close()

if __name__ == '__main__':
    try:
        print("Downloading APK File....")       
        API_key= "fake" #Add Androzoo API Key Here
        count = last_processed_APK()
        file = open("sha256.txt", "r")
        lines = file.readlines()
        print(len(lines))
        LinesInFile = len(lines)
        print (count)
        print (LinesInFile)
        for i in range(count,LinesInFile): # Auto Download APK files from Androzoo
            download1="https://androzoo.uni.lu/api/download?apikey="+API_key+"&sha256="+lines[i]
            ApkFileName=wget.download(download1)
            print(ApkFileName)
            static_analysis(ApkFileName,0)
            dynamic_analysis(ApkFileName,0)
            print("Static Analysis is Done(Without obfuscation)")
            obfuscation(ApkFileName)
            print("Static Analysis is Done(With obfuscation)")
            print("Back to main")
            processed_APK(i)
        file.close()
    except KeyboardInterrupt:
        print('Hello user you have pressed ctrl-c button.')
        processed_APK(i)
        print("Thank You")



